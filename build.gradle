plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'

	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.esanghaesee.unme3'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	//querydsl 추가
	implementation 'com.querydsl:querydsl-jpa'

	//kafka 추가
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'


	//sql query 보여주기
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

	//jackson library(arraylist변환 안되서 추가)
//	implementation 'com.fasterxml.jackson.core:jackson-core:2.9.7'
//	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.7'
//	implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'


}

test {
	useJUnitPlatform()
}

//build -> generate -> querydsl에 querydsl 컴파일시 파일 생성됨
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

compileQuerydsl.doFirst { if(file(querydslDir).exists() ) delete(file(querydslDir)) }

//querydsl 추가 끝
